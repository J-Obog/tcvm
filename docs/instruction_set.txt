==============  INSTRUCTION FMT ================
Z TYPE(1 BYTE) => Format for zero operand instructions
------------------------------------------------------------
BYTE 1
[0:7] Opcode


RS TYPE(2 BYTES) => Register-Source Format
------------------------------------------------------------
BYTE 1
[0:7] Opcode

BYTE 2
[0:2] Regiser
[3:4] Source type
[5:7] Size specifier


M TYPE(2 BYTES) => Move Format
------------------------------------------------------------
BYTE 1
[0:7] Opcode

BYTE 2
[0:1] Destination type
[2:3] Source type
[4:6] Size specifier
[7:7] Unused 

J TYPE(2 BYTES) => Jump Format
------------------------------------------------------------
BYTE 1
[0:7] Opcode

BYTE 2
[0:2] Flag tested
[3:4] Source type
[5:5] Is negated
[6:7] Unused


DESTINATION/SOURCE TYPES
0000    register    A CPU Register    
0001    [register]  The effective address of a register
0010    [memory]    The effective address of a location in memory
0011    immediate   A numeric literal


============== INSTRUCTION SET ================
nop
mov[size]    destination, source
add[size]    destination, source
sub[size]    destination, source
mul[size]    destination, source
div[size]    destination, source
and[size]    destination, source
or[size]     destination, source
not[size]    destination
xor[size]    destination, source
cmp[size]    destination, source
jmp[cond]    source
push[size]   source
pop[size]       
call         source
ret
shl[size]   destination, source
shr[size]   destination, source
sys

============== DIRECTIVES ================
label       identifier
D[size]     immediate

--------------------------------------------------------
destination = register | [register] | [memory] 
source = register | [register] | [memory] | memory | immediate
size = 8 | 16 | 32
cond = Z | NZ | N | NN | P | NP