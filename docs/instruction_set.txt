<alpha> ::= 'a'->'z' | 'A'->'Z'
<digit> ::= '0'->'9'
<number> ::= <digit> { <digit> }
<identifier> ::= <alpha> | '_' { <alpha> | <digit> | '_'} 
<condition> :: = 'NZ' | 'Z' | 'NN' | 'N' | 'MP' 
<type_specifier> ::= '8' | '16' | '32'

REGISTERS
<register> ::= '$' ('r'('0' | '1' | '2' | '3') | 'sp')   


ADDRESS MODE
<source> ::= <identifier> | <immediate> | <register>


DIRECTIVES
<label_directive> ::= 'LABEL' <identifier>
<data_directive> ::= 'DATA' <type_specifier> <immediate>


INSTRUCTION SET
<move_instruction> ::= 'MOV' <type_specifier> (<register> | '[' <register> ']') <source>
<arithmetic_instruction> ::= ('ADD' | 'SUB' | 'MUL' | 'DIV') <register> <source>
<logical_instruction> ::= ('AND' | 'OR' | 'XOR' | 'NOT') <register> <source>

<cmp_instruction> ::= 'CMP' <register> <source>
<jmp_instruction> ::= 'J' <condition> <source>
<push_instruction> ::= 'PUSH' <type_specifier> <source>
<pop_instruction> ::= 'POP' <type_specifier>
<call_instruction> ::= 'CALL' <source>
<shl_instruction> ::= 'SHL' <register> <source>
<shr_instruction> ::= 'SHR' <register> <source>

<ret_instruction> ::= 'RET'
<nop_instruction> ::= 'NOP'
<halt_instruction> ::= 'HALT'


SYSTEM CALLS
<sysputs_instruction> ::= 'SYSPUTS' <source>